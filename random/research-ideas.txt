A SAT-Based Procedure for Verifying Finite State Machines in ACL2

. sulfa properties converted into sat (cnf): 
. We present an algorithm for converting ACL2 conjectures into conjunctive normal form (CNF),
    which we then output and check with an external satisfiability solver. 
    The procedure is directly available as an ACL2 proof request. 
    When the SAT tool is successful, a theorem  is added to the ACL2 system database as a lemma for use
    in future proof attempts. 


Cell morphing: from array programs to array-free Horn clauses

. From our programs with arrays, we generate nonlinear Horn clauses over scalar variables only,
    in a common format with clear and unambiguous logical semantics, for which there exist several
    solvers. We thus avoid the use of solvers operating over arrays, which are still very immature.

Inductive Approach to Spacer

. as linear CHC: an approach called property-directed reachability proposed as a solver of finite model-checking 
    that corresponds to linear CHCs over finite data domain, also applied to non linear CHCs (GPDR)
. Spacer is based on several new ideas, but the key to refutational completeness is a technique 
    called model-based projection. It is used to divide the set of local candidates
    of counterexamples into a finite number of classes, and the finiteness of the classes allows an
    exhaustive search for candidates of global counterexamples in a finite number of steps.
. the refutational completeness of spacer seems to be a matter of discussion? there exists a refutationally
    complete variant

The method of coalgebra: exercises in coinduction 
. w


core idea: 
a compositional approach to hardware verification exploiting high level abstractions (dialects)
for progressive and verified lowering 

Things we want to say and do over the three years: 
. formalize high level abstractions as FSMs (papers on how to use FSMs to represent dataflow? requires representing actual handshake)
. extend fsm dialect to represent buechi automata 
. reason about designs in terms of omega-languages, ltl and ctl
. make verification of designs modular and prpogressive as the design becomes more complex.


